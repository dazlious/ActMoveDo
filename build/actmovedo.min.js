/*! ActMoveDo, version 0.0.1, copyright by Michael Duve | 2015-07-23 */
var actMoveDo=actMoveDo||function(a){"use strict";function b(b){this.settings={container:".actmovedo",isTouchDevice:this.checkTouch(),isMouseDevice:this.checkMouse(),zoom:{min:0,max:1,initial:.5,steps:{tap:.2,scroll:.05}},timeTreshold:{tap:200,doubletap:200,longpress:500,swipeFlick:300},distanceTreshold:{swipeFlick:200},callbacks:{tap:null,tapLongpress:null,doubletap:null,longpress:null,pan:null,swipe:null,flick:null,zoom:null}},this.settings.eventNames={start:{touch:"touchstart",mouse:"mousedown"},move:{touch:"touchmove",mouse:"mousemove"},end:{touch:"touchend",mouse:"mouseup"},scroll:this.getScrollEventName()},a.extend(this.settings,b||{}),this.current={downEvent:!1,hasMoved:!1,multitouch:!1,lastAction:null,start:null,move:null,end:null,time:null,timeStart:null,timeEnd:null,timeout:null},this.init(),this.bindEvents()}return b.prototype.init=function(){this.$container=a(this.settings.container)},b.prototype.bindEvents=function(){this.settings.isTouchDevice&&this.bindTouchEvents(),this.settings.isMouseDevice&&this.bindMouseEvents()},b.prototype.bindTouchEvents=function(){this.$container.on(this.settings.eventNames.start.touch,this.startHandler.bind(this)),this.$container.on(this.settings.eventNames.move.touch,this.moveHandler.bind(this)),this.$container.on(this.settings.eventNames.end.touch,this.endHandler.bind(this))},b.prototype.bindMouseEvents=function(){this.$container.on(this.settings.eventNames.scroll,this.scrollHandler.bind(this)),this.$container.on(this.settings.eventNames.start.mouse,this.startHandler.bind(this)),this.$container.on(this.settings.eventNames.move.mouse,this.moveHandler.bind(this)),this.$container.on(this.settings.eventNames.end.mouse,this.endHandler.bind(this))},b.prototype.scrollHandler=function(a){a.stopPropagation(),a.preventDefault();var b=this.getEvent(a);this.getScrollDirection(b)},b.prototype.startHandler=function(a){a.stopPropagation(),a.preventDefault();var b=this.getEvent(a);if(this.current.target=a.target,this.current.downEvent=!0,this.current.timeStart=a.timeStamp,this.current.timeout&&(this.current.timeout=clearTimeout(this.current.timeout)),b instanceof MouseEvent)this.current.start=this.getRelativePosition(b);else if(b.length<=1)this.current.start=this.getRelativePosition(b[0]);else if(2===b.length){this.current.multitouch=!0;var c=this.getRelativePosition(b[0]),d=this.getRelativePosition(b[1]);this.current.distance=this.getDistance(c,d),this.current.start=[(c[0]+d[0])/2,(c[1]+d[1])/2]}switch(this.current.lastAction){case null:this.current.lastAction="tap";break;case"tap":this.current.lastAction="doubletap"}},b.prototype.moveHandler=function(a){if(!this.current.downEvent)return!1;this.current.hasMoved=!0,this.current.lastAction="move",a.stopPropagation(),a.preventDefault();var b,c,d=this.getEvent(a),e=this.current.move?this.current.move:this.current.start,f=this.current.time?this.current.time:this.current.timeStart,g=a.timeStamp;this.current.time=a.timeStamp,d instanceof MouseEvent?b=this.getRelativePosition(d):d.length<=1&&(b=this.getRelativePosition(d[0])),c=this.getDistance(e,b);var h=g-f;this.current.speed=this.calculateSpeed(c,h),this.current.oldMove=this.current.move,this.current.move=b,this.eventCallback(this.settings.callbacks.pan,{target:this.current.target,positions:{start:this.current.start,current:this.current.move,last:e},timeElapsed:{sinceLast:h,sinceStart:g-this.current.timeStart},distanceToLastPoint:c,speed:this.current.speed})},b.prototype.endHandler=function(a){a.stopPropagation(),a.preventDefault();var b=this.getEvent(a);this.current.timeEnd=a.timeStamp;var c=this.current.timeEnd-this.current.timeStart;if(b instanceof MouseEvent?this.current.end=this.getRelativePosition(b):b.length<=1&&(this.current.end=this.getRelativePosition(b[0])),this.current.hasMoved||!this.current.downEvent||this.current.multitouch){if(this.current.hasMoved&&this.current.downEvent&&!this.current.multitouch){if(this.settings.callbacks.swipe||this.settings.callbacks.flick){var d;this.settings.callbacks.swipe?d=[this.current.end[0]-this.current.start[0],this.current.end[1]-this.current.start[1]]:this.settings.callbacks.flick&&(d=[this.current.end[0]-this.current.oldMove[0],this.current.end[1]-this.current.oldMove[1]]);var e=this.vectorLength(d),f=[d[0]/e,d[1]/e],g=this.getDistance(this.current.end,this.current.start),h=this.calculateSpeed(g,c);if(this.settings.callbacks.swipe&&c<=this.settings.timeTreshold.swipeFlick&&g<=this.settings.distanceTreshold.swipeFlick){var i=this.getSwipeDirections(f);this.eventCallback(this.settings.callbacks.swipe,{positions:{start:this.current.start,end:this.current.end},speed:h,directions:{named:i,detailed:f}})}this.settings.callbacks.flick&&this.eventCallback(this.settings.callbacks.flick,{speed:h,direction:f,positions:{start:this.current.start,end:this.current.end}})}switch(this.current.lastAction){default:this.current.lastAction=null}}}else switch(this.current.lastAction){case"tap":c<this.settings.timeTreshold.longpress?this.setTimeoutForEvent(this.settings.callbacks.tap,this.settings.timeTreshold.tap,{target:this.current.target,positions:{start:this.current.start,end:this.current.end}}):this.eventCallback(this.settings.callbacks.longpress,{target:this.current.target,positions:{start:this.current.start,end:this.current.end}});break;case"doubletap":c<this.settings.timeTreshold.longpress?this.setTimeoutForEvent(this.settings.callbacks.doubletap,this.settings.timeTreshold.doubletap,{target:this.current.target,positions:{start:this.current.start,end:this.current.end}}):this.eventCallback(this.settings.callbacks.tapLongpress,{target:this.current.target,positions:{start:this.current.start,end:this.current.end}});break;default:this.current.lastAction=null}this.current.downEvent=!1,this.current.hasMoved=!1,this.current.multitouch=!1},b.prototype.calculateSpeed=function(a,b){return a/b*100},b.prototype.getSwipeDirections=function(a){var b=[];return a[0]<0&&b.push("left"),a[0]>0&&b.push("right"),a[1]<0&&b.push("up"),a[1]>0&&b.push("down"),b},b.prototype.vectorLength=function(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1])},b.prototype.setTimeoutForEvent=function(a,b,c){this.current.timeout=setTimeout(this.eventCallback.bind(this,a,c),b)},b.prototype.eventCallback=function(a,b){a&&a(b),this.current.lastAction=null},b.prototype.getRelativePosition=function(a){var b=a.target||a.srcElement,c=b.getBoundingClientRect(),d=(a.clientX-c.left)/c.width,e=(a.clientY-c.top)/c.height;return[d,e]},b.prototype.getDistance=function(a,b){var c=a[0]-b[0],d=a[1]-b[1];return Math.sqrt(c*c+d*d)},b.prototype.getScrollDirection=function(a){var b=parseInt(a.axis,10);a.deltaY>0||2===b&&a.detail>0||a.deltaY<0||2===b&&a.detail<0},b.prototype.checkTouch=function(){return navigator.MaxTouchPoints||(navigator.MaxTouchPoints=0),navigator.msMaxTouchPoints||(navigator.msMaxTouchPoints=0),"ontouchstart"in window||navigator.MaxTouchPoints>0||navigator.msMaxTouchPoints>0},b.prototype.checkMouse=function(){return"onmousedown"in window},b.prototype.getScrollEventName=function(){return"onmousewheel"in window?"mousewheel":"DOMMouseScroll"},b.prototype.getEvent=function(a){return a.originalEvent.touches||(a.originalEvent.touches=void 0),a.originalEvent.changedTouches||(a.originalEvent.changedTouches=void 0),jQuery.event.fix(a),a.originalEvent.touches||a.originalEvent.changedTouches||a.originalEvent},b}(jQuery);